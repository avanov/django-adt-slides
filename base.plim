---!
    import codecs
    from pygments import highlight
    from pygments.lexers import get_lexer_by_name
    from pygments.formatters import HtmlFormatter

-def code_block(language, code_id, linenos=False)
    ---
        lexer = get_lexer_by_name(language, stripall=True)
        formatter = HtmlFormatter(linenos=linenos, cssclass="source")
        with codecs.open('code/{}'.format(code_id), 'rb', 'utf-8') as f:
            code = f.read()
        result = highlight(code, lexer, formatter)
    == result

doctype html
html lang="en"

	head
		meta charset="utf-8"

		title Declarative programming and ADT in use in Django

		meta name="description" content="A framework for easily creating beautiful presentations using HTML"
		meta name="author" content="Hakim El Hattab"

		meta name="apple-mobile-web-app-capable" content="yes"
		meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"

		meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"

		link rel="stylesheet" href="css/reveal.min.css"
		link rel="stylesheet" href="css/theme/serif.css" id="theme"

		/ For syntax highlighting
		link rel="stylesheet" href="lib/css/zenburn.css"

		/ If the query includes 'print-pdf', include the PDF print sheet
		script
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = 'css/print/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
			}

		<!--[if lt IE 9]>
		script src="lib/js/html5shiv.js"
		<![endif]-->
		style
            ${HtmlFormatter(style='manni').get_style_defs('.source')|n}
            .source {
                box-shadow: 0 0 6px rgba(0, 0, 0, 0.3);
                }
            .source PRE {
                padding:1em;
                box-shadow:0;
                }
            .reveal PRE {
                box-shadow:none;
                }
            .reveal PRE CODE {
                font-size: 0.80em;
                line-height: 1.2em;
                }
            .pull-right {
                text-align: right;
                }
            .pull-left {
                text-align: left;
                }

	body
        .reveal: .slides = next.body()

		script src="lib/js/head.min.js"
		script src="js/reveal.min.js"

		script
			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: false,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'linear', // default/cube/page/concave/zoom/linear/fade/none

				// Parallax scrolling
				// parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
				// parallaxBackgroundSize: '2100px 900px',

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});
